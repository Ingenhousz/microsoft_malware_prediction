from util import *


# %% read in data
def engineer_feature(debug=True):

    with timer("read in files"):
        if debug:
            train, test = read_files(debug)
        else:
            train, test = read_pickle()
        print(train.shape)

    with timer("add time stamp"):
        train, test = add_timestamp(train, test)
        print(train.shape)

    # with timer("initial feature engineering"):
    #     train, test = initial_engineering(train, test)
    #     print(train.shape)

    with timer("drop useless features"):
        train, test = drop_useless(train, test)
        print(train.shape)

    with timer('convert data to sparse matrix'):  # improve to 0.661
        y_train, train_ids, test_ids, train, test = transfer_sparse(train, test)
        print(train.shape)

    with timer('target encoding'):
        for col in train.columns:
            train[col+'t'], test[col+'t'] = target_encode(train[col], test[col], y_train)
        print(train.shape)

    with timer('one hot encoding'):
        train, test, m = one_hot(train, test)
        print(train.shape)

    return train, test, y_train, train_ids, test_ids, m

    # with timer('save result'):
    #     data = [train, test, y_train, train_ids, test_ids, m]
    #     file_name = "input/engineered_features.pkl"
    #     save_to_pickle(data, file_name)


if __name__ == '__main__':
    engineer_feature(debug=False)
